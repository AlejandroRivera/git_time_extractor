#!/usr/bin/env ruby
# Extract Reasonable Developer Time Records from a GIT Repository's Commit Log
#
# This is inspired by a RAKE task publicly posted by Sharad at 
# http://www.tatvartha.com/2010/01/generating-time-entry-from-git-log/. 
# However, it has been adapted to run without Rails from the command line.
#
# Portions (C) 2012 Rietta Inc. and licensed under the terms of the BSD license.

  # Adjust path in case called directly and not through gem
  $:.unshift "#{File.expand_path(File.dirname(__FILE__))}/../lib"

  require 'git_time_extractor'


  options = {:project => '', :path_to_repo => Dir.pwd, :output_file => '-'}
  
  option_parser = OptionParser.new do |opts|
    opts.on('-p PROJECT', '--project PROJECT') do |project|
       options[:project] = project
    end
    
    opts.on('-i REPOPATH', '--repo-path REPOPATH') do |repopath|
       options[:path_to_repo] = repopath
    end
    
    opts.on('-o OUTPUT_CSV', '--out OUTPUT_CSV') do |output_file|
       options[:output_file] = output_file
    end
  end
  
  option_parser.parse!

  #puts "\n# Arguments #{ARGV.length}\n"

  valid_usage = false


  unless valid_usage
    puts "Usage: git_time_extractor PROJECT_NAME [PATH_TO_REPO] [OUTPUT_FILE]"
    puts "Copyright 2012 Rietta Inc.  http://www.rietta.com"
    exit 0
  else 
    #path_to_repo = File.expand_path(File.dirname(path_to_repo)) if nil != path_to_repo && "" != path_to_repo
    #puts "\n\nGit Repo Path: #{path_to_repo}\nOutput: #{output_file}\n"
    GitTimeExtractor.process_git_log_into_time(path_to_repo, output_file)
  end

